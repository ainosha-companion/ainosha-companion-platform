version: '3.8'

services:
    aino_app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: aino_client_api
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www:delegated
            - vendor_data:/var/www/vendor
        expose:
            - "9000"
        environment:
            - PHP_MEMORY_LIMIT=512M
            - PHP_MAX_EXECUTION_TIME=120
        networks:
            - aino_network
        depends_on:
            aino_mysql:
                condition: service_healthy
            aino_redis:
                condition: service_started

    aino_nginx:
        image: nginx:alpine
        container_name: nginx_server
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./storage/logs/nginx:/var/log/nginx
        networks:
            - aino_network
        depends_on:
            - aino_app

    aino_mysql:
        image: mysql:8.3
        container_name: mysql_db
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        healthcheck:
            test: ["CMD-SHELL", "mysqladmin ping -p$${MYSQL_ROOT_PASSWORD}"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - aino_network

    aino_redis:
        image: redis:alpine
        container_name: redis_cache
        restart: unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
            - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
        command: redis-server /usr/local/etc/redis/redis.conf
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 10s
            timeout: 5s
            retries: 3
        networks:
            - aino_network

    aino_queue:
        build:
            context: .
            dockerfile: Dockerfile          # reuse the same PHP image you already built
        container_name: aino_queue_worker
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www:delegated          # same code as app
            - vendor_data:/var/www/vendor   # keep vendor cache aligned
        depends_on:
            aino_redis:
                condition: service_started
            aino_mysql:
                condition: service_healthy
        command: >
            php artisan queue:work redis --tries=3 --sleep=2 --memory=256 --timeout=1800
        healthcheck:
            test: ["CMD", "php", "artisan", "queue:work", "--once", "--quiet", "--sleep=0"]
            interval: 60s
            timeout: 10s
            retries: 3
        env_file:
            -   .env
        networks:
            - aino_network

networks:
    aino_network:
        driver: bridge

volumes:
    mysql_data:
        driver: local
    redis_data:
        driver: local
    vendor_data:
        driver: local
